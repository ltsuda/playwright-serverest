name: Docker API Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  api:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image only for api tests
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          tags: ltsuda/playwright-serverest:api
          load: true
          push: false

      - name: Run API tests on container
        uses: addnab/docker-run-action@v3
        with:
          image: ltsuda/playwright-serverest:api
          run: npx playwright test --grep-invert '@schema' --reporter 'dot'

  schema:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image only for schema tests
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          tags: ltsuda/playwright-serverest:schema
          load: true
          push: false

      - name: Run @schema on container
        uses: addnab/docker-run-action@v3
        with:
          image: ltsuda/playwright-serverest:schema
          run: npx playwright test --grep '@schema' --reporter 'dot'

  all:
    if: ${{ github.event_name == 'push'}}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image only for all tests
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          tags: ltsuda/playwright-serverest:all
          load: true
          push: false

      - name: Run all tests on container
        uses: addnab/docker-run-action@v3
        with:
          image: ltsuda/playwright-serverest:all
          run: npx playwright test --reporter 'dot'
