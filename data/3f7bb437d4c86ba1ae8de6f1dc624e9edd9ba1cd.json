{
  "fileId": "3f7bb437d4c86ba1ae8de6f1dc624e9edd9ba1cd",
  "fileName": "login.spec.js",
  "tests": [
    {
      "testId": "3f7bb437d4c86ba1ae8de6f1dc624e9edd9ba1cd-9218934e78f3046f50c7917410ac6d3162170651",
      "title": "Login com usuário válido",
      "projectName": "",
      "location": {
        "file": "login.spec.js",
        "line": 5,
        "column": 5
      },
      "duration": 16,
      "outcome": "expected",
      "path": [
        "login.spec.js:5",
        "Login endpoint @login"
      ],
      "results": [
        {
          "duration": 16,
          "startTime": "2021-10-31T02:06:13.982Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:06:13.982Z",
              "duration": 2,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:13.988Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:13.996Z",
              "duration": 0,
              "snippet": "  10 |\n  11 |         expect(response.status()).toBe(200)\n     |                                   ^\n  12 |",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 11,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:06:13.997Z",
              "duration": 0,
              "snippet": "  13 |         const responseData = await response.json()\n  14 |         expect(responseData).toHaveProperty(\"message\", \"Login realizado com sucesso\")\n     |                              ^\n  15 |         expect(responseData).toHaveProperty(\"authorization\", responseData.authorization)",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 14,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:06:13.997Z",
              "duration": 0,
              "snippet": "  14 |         expect(responseData).toHaveProperty(\"message\", \"Login realizado com sucesso\")\n  15 |         expect(responseData).toHaveProperty(\"authorization\", responseData.authorization)\n     |                              ^\n  16 |     })",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 15,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:06:13.997Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "3f7bb437d4c86ba1ae8de6f1dc624e9edd9ba1cd-2618cbb312dea49d4387bcf9bc43e5bf156417cd",
      "title": "Login com email e/ou senha inválidos",
      "projectName": "",
      "location": {
        "file": "login.spec.js",
        "line": 18,
        "column": 5
      },
      "duration": 8,
      "outcome": "expected",
      "path": [
        "login.spec.js:18",
        "Login endpoint @login"
      ],
      "results": [
        {
          "duration": 8,
          "startTime": "2021-10-31T02:06:13.996Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:06:13.996Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:14.002Z",
              "duration": 0,
              "snippet": "  21 |         })\n  22 |         expect(response.status()).toBe(401)\n     |                                   ^\n  23 |",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 22,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:06:14.003Z",
              "duration": 0,
              "snippet": "  24 |         const responseData = await response.json()\n  25 |         expect(responseData).toHaveProperty(\"message\", \"Email e/ou senha inválidos\")\n     |                              ^\n  26 |     })",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 25,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:06:14.003Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "3f7bb437d4c86ba1ae8de6f1dc624e9edd9ba1cd-951c9c3d1acdac647745a4f6fa20397e6605f497",
      "title": "Login com campo inválido",
      "projectName": "",
      "location": {
        "file": "login.spec.js",
        "line": 28,
        "column": 5
      },
      "duration": 19,
      "outcome": "expected",
      "path": [
        "login.spec.js:28",
        "Login endpoint @login"
      ],
      "results": [
        {
          "duration": 19,
          "startTime": "2021-10-31T02:06:13.998Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:06:13.998Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:14.005Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:14.010Z",
              "duration": 0,
              "snippet": "  32 |         })\n  33 |         expect(response.status()).toBe(400)\n     |                                   ^\n  34 |",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 33,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:06:14.011Z",
              "duration": 0,
              "snippet": "  35 |         const responseData = await response.json()\n  36 |         expect(responseData).toHaveProperty(\"invalido\", \"invalido não é permitido\")\n     |                              ^\n  37 |     })",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 36,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:06:14.011Z",
              "duration": 6,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "3f7bb437d4c86ba1ae8de6f1dc624e9edd9ba1cd-49ff8ecbb5b18a7c12d53146211c25f10fff2d25",
      "title": "Login com email inválido",
      "projectName": "",
      "location": {
        "file": "login.spec.js",
        "line": 39,
        "column": 5
      },
      "duration": 28,
      "outcome": "expected",
      "path": [
        "login.spec.js:39",
        "Login endpoint @login"
      ],
      "results": [
        {
          "duration": 28,
          "startTime": "2021-10-31T02:06:14.005Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:06:14.005Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:14.019Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:14.031Z",
              "duration": 0,
              "snippet": "  43 |         })\n  44 |         expect(response.status()).toBe(400)\n     |                                   ^\n  45 |",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 44,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:06:14.032Z",
              "duration": 0,
              "snippet": "  46 |         const responseData = await response.json()\n  47 |         expect(responseData).toHaveProperty(\"email\", \"email deve ser um email válido\")\n     |                              ^\n  48 |     })",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 47,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:06:14.032Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "3f7bb437d4c86ba1ae8de6f1dc624e9edd9ba1cd-f67e6287b68f825ec4507585faa2a3409d743d9f",
      "title": "Login com email em branco",
      "projectName": "",
      "location": {
        "file": "login.spec.js",
        "line": 50,
        "column": 5
      },
      "duration": 33,
      "outcome": "expected",
      "path": [
        "login.spec.js:50",
        "Login endpoint @login"
      ],
      "results": [
        {
          "duration": 33,
          "startTime": "2021-10-31T02:06:14.018Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:06:14.018Z",
              "duration": 10,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:14.046Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:06:14.050Z",
              "duration": 0,
              "snippet": "  54 |         })\n  55 |         expect(response.status()).toBe(400)\n     |                                   ^\n  56 |",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 55,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:06:14.050Z",
              "duration": 0,
              "snippet": "  57 |         const responseData = await response.json()\n  58 |         expect(responseData).toHaveProperty(\"email\", \"email não pode ficar em branco\")\n     |                              ^\n  59 |     })",
              "steps": [],
              "location": {
                "file": "login.spec.js",
                "line": 58,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:06:14.051Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}