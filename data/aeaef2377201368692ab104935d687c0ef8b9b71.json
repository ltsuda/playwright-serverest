{
  "fileId": "aeaef2377201368692ab104935d687c0ef8b9b71",
  "fileName": "produtos.spec.js",
  "tests": [
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-9c5cd26611deaff6cb142d95d4f9bb39c21afa64",
      "title": "Listar produtos cadastrados",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 14,
        "column": 5
      },
      "duration": 27,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:14",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 27,
          "startTime": "2021-10-30T23:05:53.492Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.493Z",
              "duration": 20,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.498Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.506Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.513Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.518Z",
              "duration": 0,
              "snippet": "   15 |         const response = await request.get(`${baseURL}${productsPath}`)\n   16 |         expect(response.status()).toBe(200)\n      |                                   ^\n   17 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 16,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.519Z",
              "duration": 0,
              "snippet": "   18 |         const responseData = await response.json()\n   19 |         expect(responseData).toHaveProperty(\"quantidade\")\n      |                              ^\n   20 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 19,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.519Z",
              "duration": 0,
              "snippet": "   19 |         expect(responseData).toHaveProperty(\"quantidade\")\n   20 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   21 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 20,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.519Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-c794fc64bac856b130c774201709cff9388b3adc",
      "title": "Listar produtos filtrados por ID",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 23,
        "column": 5
      },
      "duration": 24,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:23",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 24,
          "startTime": "2021-10-30T23:05:53.497Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.497Z",
              "duration": 15,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.502Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.506Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.511Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.517Z",
              "duration": 0,
              "snippet": "   24 |         const response = await request.get(`${baseURL}${productsPath}?_id=${produto._id}`)\n   25 |         expect(response.status()).toBe(200)\n      |                                   ^\n   26 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 25,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.518Z",
              "duration": 0,
              "snippet": "   27 |         const responseData = await response.json()\n   28 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n      |                              ^\n   29 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 28,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.519Z",
              "duration": 0,
              "snippet": "   28 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n   29 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   30 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 29,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.519Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-638babdc57419543f7c3df085695a9f4ef482bb5",
      "title": "Listar produtos filtrados por Nome",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 32,
        "column": 5
      },
      "duration": 30,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:32",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 30,
          "startTime": "2021-10-30T23:05:53.521Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.521Z",
              "duration": 23,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.527Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.537Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.543Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.549Z",
              "duration": 0,
              "snippet": "   33 |         const response = await request.get(`${baseURL}${productsPath}?nome=${produto.nome}`)\n   34 |         expect(response.status()).toBe(200)\n      |                                   ^\n   35 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 34,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.550Z",
              "duration": 0,
              "snippet": "   36 |         const responseData = await response.json()\n   37 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n      |                              ^\n   38 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 37,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.550Z",
              "duration": 0,
              "snippet": "   37 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n   38 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   39 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 38,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.550Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-70339dee6471003d88f50f08ae79fe9a026ce3e8",
      "title": "Listar produtos filtrados por Preço",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 41,
        "column": 5
      },
      "duration": 30,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:41",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 30,
          "startTime": "2021-10-30T23:05:53.521Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.521Z",
              "duration": 23,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.526Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.532Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.543Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.548Z",
              "duration": 0,
              "snippet": "   42 |         const response = await request.get(`${baseURL}${productsPath}?preco=${produto.preco}`)\n   43 |         expect(response.status()).toBe(200)\n      |                                   ^\n   44 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 43,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-30T23:05:53.549Z",
              "duration": 0,
              "snippet": "   45 |         const responseData = await response.json()\n   46 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   47 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 46,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.550Z",
              "duration": 0,
              "snippet": "   46 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   47 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   48 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 47,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.550Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-77c6642d6ef6c0d413a93e28910d443d07d86b73",
      "title": "Listar produtos filtrados por Descrição",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 50,
        "column": 5
      },
      "duration": 33,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:50",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 33,
          "startTime": "2021-10-30T23:05:53.551Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.551Z",
              "duration": 26,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.559Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.564Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.576Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.582Z",
              "duration": 1,
              "snippet": "   51 |         const response = await request.get(`${baseURL}${productsPath}?descricao=${produto.descricao}`)\n   52 |         expect(response.status()).toBe(200)\n      |                                   ^\n   53 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 52,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-30T23:05:53.583Z",
              "duration": 1,
              "snippet": "   54 |         const responseData = await response.json()\n   55 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   56 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 55,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.584Z",
              "duration": 0,
              "snippet": "   55 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   56 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   57 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 56,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.584Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-64301c03905db64b9ad0ca080ec1806f1e5a01bd",
      "title": "Listar produtos filtrados por Quantidade",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 59,
        "column": 5
      },
      "duration": 34,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:59",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 34,
          "startTime": "2021-10-30T23:05:53.552Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.552Z",
              "duration": 25,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.562Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.571Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.577Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.581Z",
              "duration": 0,
              "snippet": "   60 |         const response = await request.get(`${baseURL}${productsPath}?quantidade=${produto.quantidade}`)\n   61 |         expect(response.status()).toBe(200)\n      |                                   ^\n   62 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 61,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-30T23:05:53.585Z",
              "duration": 0,
              "snippet": "   63 |         const responseData = await response.json()\n   64 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   65 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 64,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.585Z",
              "duration": 0,
              "snippet": "   64 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   65 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   66 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 65,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.585Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-c0aa22141ef0cd3a81b1b2c02ee1f27a7a631130",
      "title": "Cadastrar produto com sucesso",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 68,
        "column": 5
      },
      "duration": 45,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:68",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 45,
          "startTime": "2021-10-30T23:05:53.586Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.586Z",
              "duration": 32,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.591Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.598Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.617Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.621Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.625Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.629Z",
              "duration": 0,
              "snippet": "   80 |\n   81 |         expect(response.status()).toBe(201)\n      |                                   ^\n   82 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 81,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.630Z",
              "duration": 0,
              "snippet": "   83 |         const responseData = await response.json()\n   84 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n      |                              ^\n   85 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 84,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.630Z",
              "duration": 0,
              "snippet": "   84 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n   85 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)\n      |                              ^\n   86 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 85,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.630Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-540d10330161d85d29b0b2a2ce6e0b2a5b9e7e3b",
      "title": "Cadastrar produto com nome já existente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 88,
        "column": 5
      },
      "duration": 45,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:88",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 45,
          "startTime": "2021-10-30T23:05:53.588Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.588Z",
              "duration": 24,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.592Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.596Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.612Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.619Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.627Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.632Z",
              "duration": 0,
              "snippet": "  106 |\n  107 |         expect(response.status()).toBe(400)\n      |                                   ^\n  108 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 107,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.633Z",
              "duration": 0,
              "snippet": "  109 |         const responseData = await response.json()\n  110 |         expect(responseData).toHaveProperty(\"message\", \"Já existe produto com esse nome\")\n      |                              ^\n  111 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 110,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.633Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-a81b020d697fbfe9382fdd32a0ec76d139aa3637",
      "title": "Cadastrar produto com Token ausente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 113,
        "column": 5
      },
      "duration": 34,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:113",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 34,
          "startTime": "2021-10-30T23:05:53.631Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.631Z",
              "duration": 28,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.638Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.653Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.659Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.664Z",
              "duration": 0,
              "snippet": "  122 |\n  123 |         expect(response.status()).toBe(401)\n      |                                   ^\n  124 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 123,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.665Z",
              "duration": 0,
              "snippet": "  125 |         const responseData = await response.json()\n  126 |         expect(responseData).toHaveProperty(\n      |                              ^\n  127 |             \"message\",",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 126,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.665Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-582d1d5342c8ae4ac342a79d380b22608b1ea20f",
      "title": "Cadastrar produto com usuário não administrador",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 132,
        "column": 5
      },
      "duration": 42,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:132",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 42,
          "startTime": "2021-10-30T23:05:53.635Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.635Z",
              "duration": 22,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.639Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.650Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.656Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.662Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.668Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.676Z",
              "duration": 0,
              "snippet": "  150 |\n  151 |         expect(response.status()).toBe(403)\n      |                                   ^\n  152 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 151,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.677Z",
              "duration": 0,
              "snippet": "  153 |         const responseData = await response.json()\n  154 |         expect(responseData).toHaveProperty(\"message\", \"Rota exclusiva para administradores\")\n      |                              ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 154,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.677Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-9678b50fed992ea89a90a3e64dd7d8501e92b142",
      "title": "Buscar produto por ID",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 157,
        "column": 5
      },
      "duration": 35,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:157",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 35,
          "startTime": "2021-10-30T23:05:53.666Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.666Z",
              "duration": 28,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.675Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.680Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.693Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.699Z",
              "duration": 0,
              "snippet": "  158 |         const response = await request.get(`${baseURL}${productsPath}/${produto._id}`)\n  159 |         expect(response.status()).toBe(200)\n      |                                   ^\n  160 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 159,
                "column": 35
              }
            },
            {
              "title": "expect.toEqual",
              "startTime": "2021-10-30T23:05:53.700Z",
              "duration": 0,
              "snippet": "  161 |         const responseData = await response.json()\n  162 |         expect(responseData).toEqual(produto)\n      |                              ^\n  163 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 162,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.700Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-f46a89505988042a9718dfdb1795e831a030c068",
      "title": "Buscar produto por ID não existente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 165,
        "column": 5
      },
      "duration": 47,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:165",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 47,
          "startTime": "2021-10-30T23:05:53.678Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.679Z",
              "duration": 37,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.692Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.698Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.708Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.724Z",
              "duration": 0,
              "snippet": "  166 |         const response = await request.get(`${baseURL}${productsPath}/1`)\n  167 |         expect(response.status()).toBe(400)\n      |                                   ^\n  168 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 167,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.725Z",
              "duration": 0,
              "snippet": "  169 |         const responseData = await response.json()\n  170 |         expect(responseData).toHaveProperty(\"message\", \"Produto não encontrado\")\n      |                              ^\n  171 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 170,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.725Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-7415dd7355c008a22ca510cd9cd38234584b6e63",
      "title": "Excluir produto",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 173,
        "column": 5
      },
      "duration": 45,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:173",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 45,
          "startTime": "2021-10-30T23:05:53.704Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.704Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.716Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.721Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.732Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.738Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.742Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.747Z",
              "duration": 0,
              "snippet": "  178 |         })\n  179 |         expect(response.status()).toBe(200)\n      |                                   ^\n  180 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 179,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.748Z",
              "duration": 0,
              "snippet": "  181 |         const responseData = await response.json()\n  182 |         expect(responseData).toHaveProperty(\"message\", \"Registro excluído com sucesso\")\n      |                              ^\n  183 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 182,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.748Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-3f0a18eb1c2ca65c4b5047575e0c41cd75de30ee",
      "title": "Excluir produto inexistente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 185,
        "column": 5
      },
      "duration": 59,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:185",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 59,
          "startTime": "2021-10-30T23:05:53.726Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.726Z",
              "duration": 34,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.736Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.746Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.759Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.767Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.775Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.783Z",
              "duration": 0,
              "snippet": "  190 |         })\n  191 |         expect(response.status()).toBe(200)\n      |                                   ^\n  192 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 191,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.784Z",
              "duration": 0,
              "snippet": "  193 |         const responseData = await response.json()\n  194 |         expect(responseData).toHaveProperty(\"message\", \"Nenhum registro excluído\")\n      |                              ^\n  195 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 194,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.784Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-7bc2165ac523f4d0be21946a4779d7b488536d19",
      "title": "Excluir produto que faz parte de um carrinho",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 197,
        "column": 5
      },
      "duration": 48,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:197",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 48,
          "startTime": "2021-10-30T23:05:53.749Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.749Z",
              "duration": 19,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.755Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.760Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.767Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.776Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.782Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.790Z",
              "duration": 0,
              "snippet": "  74 |             })\n  75 |             expect(response.status()).toBe(201)\n     |                                       ^\n  76 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 75,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.796Z",
              "duration": 0,
              "snippet": "  210 |         })\n  211 |         expect(response.status()).toBe(400)\n      |                                   ^\n  212 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 211,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.797Z",
              "duration": 0,
              "snippet": "  213 |         const responseData = await response.json()\n  214 |         expect(responseData).toHaveProperty(\"message\", \"Não é permitido excluir produto que faz parte de carrinho\")\n      |                              ^\n  215 |         expect(responseData).toHaveProperty(\"idCarrinhos\", expect.arrayContaining([carrinho._id]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 214,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.797Z",
              "duration": 0,
              "snippet": "  214 |         expect(responseData).toHaveProperty(\"message\", \"Não é permitido excluir produto que faz parte de carrinho\")\n  215 |         expect(responseData).toHaveProperty(\"idCarrinhos\", expect.arrayContaining([carrinho._id]))\n      |                              ^\n  216 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 215,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.797Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-e8d0048b58d771a440e63fcdfc58d6b0281fd9ef",
      "title": "Excluir produto com Token inválido",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 218,
        "column": 5
      },
      "duration": 22,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:218",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 22,
          "startTime": "2021-10-30T23:05:53.787Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.787Z",
              "duration": 17,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.791Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.795Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.803Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.807Z",
              "duration": 0,
              "snippet": "  221 |         })\n  222 |         expect(response.status()).toBe(401)\n      |                                   ^\n  223 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 222,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.808Z",
              "duration": 0,
              "snippet": "  224 |         const responseData = await response.json()\n  225 |         expect(responseData).toHaveProperty(\n      |                              ^\n  226 |             \"message\",",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 225,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.808Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-eca2cd95dcf894cd962de45aa59654cd8d0ea873",
      "title": "Excluir produto com usuário não administrador",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 231,
        "column": 5
      },
      "duration": 30,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:231",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 30,
          "startTime": "2021-10-30T23:05:53.800Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.800Z",
              "duration": 15,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.804Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.808Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.814Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.818Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.823Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.829Z",
              "duration": 0,
              "snippet": "  242 |         })\n  243 |         expect(response.status()).toBe(403)\n      |                                   ^\n  244 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 243,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.829Z",
              "duration": 0,
              "snippet": "  245 |         const responseData = await response.json()\n  246 |         expect(responseData).toHaveProperty(\"message\", \"Rota exclusiva para administradores\")\n      |                              ^\n  247 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 246,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.829Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-c05a5c33dfa9e947f9527f59ebe88a407562852b",
      "title": "Editar produto",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 249,
        "column": 5
      },
      "duration": 81,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:249",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 81,
          "startTime": "2021-10-30T23:05:53.809Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.809Z",
              "duration": 47,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.823Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.827Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.855Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.863Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.870Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.880Z",
              "duration": 0,
              "snippet": "  260 |         })\n  261 |         expect(response.status()).toBe(200)\n      |                                   ^\n  262 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 261,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.889Z",
              "duration": 0,
              "snippet": "  263 |         const responseData = await response.json()\n  264 |         expect(responseData).toHaveProperty(\"message\", \"Registro alterado com sucesso\")\n      |                              ^\n  265 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 264,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.889Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-9a2ea7f07cd654ea38c25f57ca1474baf1ae70cb",
      "title": "Editar produto inexistente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 267,
        "column": 5
      },
      "duration": 80,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:267",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 80,
          "startTime": "2021-10-30T23:05:53.831Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.831Z",
              "duration": 41,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.861Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.865Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.871Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.876Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.894Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.909Z",
              "duration": 0,
              "snippet": "  278 |         })\n  279 |         expect(response.status()).toBe(201)\n      |                                   ^\n  280 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 279,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.910Z",
              "duration": 0,
              "snippet": "  281 |         const responseData = await response.json()\n  282 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n      |                              ^\n  283 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 282,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.910Z",
              "duration": 0,
              "snippet": "  282 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n  283 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)\n      |                              ^\n  284 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 283,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.910Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-61bbfe48f193bb5eb997bcc440dc06c2a9bbfe7b",
      "title": "Editar produto com nome já existente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 286,
        "column": 5
      },
      "duration": 34,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:286",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 34,
          "startTime": "2021-10-30T23:05:53.890Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.890Z",
              "duration": 20,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.898Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.902Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.909Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.913Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.917Z",
              "duration": 1,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.922Z",
              "duration": 0,
              "snippet": "  303 |         })\n  304 |         expect(response.status()).toBe(400)\n      |                                   ^\n  305 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 304,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.923Z",
              "duration": 0,
              "snippet": "  306 |         const responseData = await response.json()\n  307 |         expect(responseData).toHaveProperty(\"message\", \"Já existe produto com esse nome\")\n      |                              ^\n  308 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 307,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.923Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-ea38302129d29b5518b3d1a6317b81dbd11e0443",
      "title": "Editar produto com Token inválido",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 310,
        "column": 5
      },
      "duration": 23,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:310",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 23,
          "startTime": "2021-10-30T23:05:53.912Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.912Z",
              "duration": 18,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.918Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.924Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.930Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.933Z",
              "duration": 0,
              "snippet": "  319 |         })\n  320 |         expect(response.status()).toBe(401)\n      |                                   ^\n  321 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 320,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.934Z",
              "duration": 0,
              "snippet": "  322 |         const responseData = await response.json()\n  323 |         expect(responseData).toHaveProperty(\n      |                              ^\n  324 |             \"message\",",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 323,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.934Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-3db86e036ec088ae6848bdbd0515f5fd8cf6c70b",
      "title": "Editar produto com usuário não administrador",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 329,
        "column": 5
      },
      "duration": 33,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:329",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 33,
          "startTime": "2021-10-30T23:05:53.924Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-30T23:05:53.924Z",
              "duration": 16,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.929Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.935Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-30T23:05:53.939Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.949Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.952Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-30T23:05:53.955Z",
              "duration": 0,
              "snippet": "  346 |         })\n  347 |         expect(response.status()).toBe(403)\n      |                                   ^\n  348 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 347,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-30T23:05:53.956Z",
              "duration": 0,
              "snippet": "  349 |         const responseData = await response.json()\n  350 |         expect(responseData).toHaveProperty(\"message\", \"Rota exclusiva para administradores\")\n      |                              ^\n  351 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 350,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-30T23:05:53.956Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}