{
  "fileId": "aeaef2377201368692ab104935d687c0ef8b9b71",
  "fileName": "produtos.spec.js",
  "tests": [
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-9c5cd26611deaff6cb142d95d4f9bb39c21afa64",
      "title": "Listar produtos cadastrados",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 16,
        "column": 5
      },
      "duration": 31,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:16",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 31,
          "startTime": "2021-10-31T02:59:39.803Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.806Z",
              "duration": 21,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.816Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.820Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.826Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:39.831Z",
              "duration": 1,
              "snippet": "   17 |         const response = await request.get(`${baseURL}${productsPath}`)\n   18 |         expect(response.status()).toBe(200)\n      |                                   ^\n   19 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 18,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.833Z",
              "duration": 0,
              "snippet": "   20 |         const responseData = await response.json()\n   21 |         expect(responseData).toHaveProperty(\"quantidade\")\n      |                              ^\n   22 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 21,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.833Z",
              "duration": 0,
              "snippet": "   21 |         expect(responseData).toHaveProperty(\"quantidade\")\n   22 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   23 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 22,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:39.834Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-c794fc64bac856b130c774201709cff9388b3adc",
      "title": "Listar produtos filtrados por ID",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 25,
        "column": 5
      },
      "duration": 42,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:25",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 42,
          "startTime": "2021-10-31T02:59:39.824Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.824Z",
              "duration": 32,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.842Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.847Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.855Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:39.861Z",
              "duration": 0,
              "snippet": "   26 |         const response = await request.get(`${baseURL}${productsPath}?_id=${produto._id}`)\n   27 |         expect(response.status()).toBe(200)\n      |                                   ^\n   28 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 27,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.862Z",
              "duration": 0,
              "snippet": "   29 |         const responseData = await response.json()\n   30 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n      |                              ^\n   31 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 30,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.862Z",
              "duration": 0,
              "snippet": "   30 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n   31 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   32 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 31,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:39.862Z",
              "duration": 4,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-638babdc57419543f7c3df085695a9f4ef482bb5",
      "title": "Listar produtos filtrados por Nome",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 34,
        "column": 5
      },
      "duration": 44,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:34",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 44,
          "startTime": "2021-10-31T02:59:39.835Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.835Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.849Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.854Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.863Z",
                  "duration": 1,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:39.875Z",
              "duration": 0,
              "snippet": "   35 |         const response = await request.get(`${baseURL}${productsPath}?nome=${produto.nome}`)\n   36 |         expect(response.status()).toBe(200)\n      |                                   ^\n   37 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 36,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.876Z",
              "duration": 2,
              "snippet": "   38 |         const responseData = await response.json()\n   39 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n      |                              ^\n   40 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 39,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.879Z",
              "duration": 0,
              "snippet": "   39 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n   40 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 40,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:39.879Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-70339dee6471003d88f50f08ae79fe9a026ce3e8",
      "title": "Listar produtos filtrados por Preço",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 48,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:43",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 48,
          "startTime": "2021-10-31T02:59:39.867Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.867Z",
              "duration": 38,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.879Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.888Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.904Z",
                  "duration": 1,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:39.911Z",
              "duration": 0,
              "snippet": "   44 |         const response = await request.get(`${baseURL}${productsPath}?preco=${produto.preco}`)\n   45 |         expect(response.status()).toBe(200)\n      |                                   ^\n   46 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 45,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-31T02:59:39.912Z",
              "duration": 0,
              "snippet": "   47 |         const responseData = await response.json()\n   48 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   49 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 48,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.913Z",
              "duration": 0,
              "snippet": "   48 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   49 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   50 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 49,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:39.913Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-77c6642d6ef6c0d413a93e28910d443d07d86b73",
      "title": "Listar produtos filtrados por Descrição",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 52,
        "column": 5
      },
      "duration": 34,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:52",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 34,
          "startTime": "2021-10-31T02:59:39.880Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.881Z",
              "duration": 26,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.890Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.899Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.906Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:39.912Z",
              "duration": 0,
              "snippet": "   53 |         const response = await request.get(`${baseURL}${productsPath}?descricao=${produto.descricao}`)\n   54 |         expect(response.status()).toBe(200)\n      |                                   ^\n   55 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 54,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-31T02:59:39.913Z",
              "duration": 0,
              "snippet": "   56 |         const responseData = await response.json()\n   57 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   58 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 57,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.913Z",
              "duration": 0,
              "snippet": "   57 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   58 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   59 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 58,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:39.913Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-64301c03905db64b9ad0ca080ec1806f1e5a01bd",
      "title": "Listar produtos filtrados por Quantidade",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 61,
        "column": 5
      },
      "duration": 38,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:61",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 38,
          "startTime": "2021-10-31T02:59:39.915Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.915Z",
              "duration": 18,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.920Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.927Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.932Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:39.945Z",
              "duration": 0,
              "snippet": "   62 |         const response = await request.get(`${baseURL}${productsPath}?quantidade=${produto.quantidade}`)\n   63 |         expect(response.status()).toBe(200)\n      |                                   ^\n   64 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 63,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-31T02:59:39.948Z",
              "duration": 1,
              "snippet": "   65 |         const responseData = await response.json()\n   66 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   67 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 66,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.949Z",
              "duration": 0,
              "snippet": "   66 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   67 |         expect(responseData).toHaveProperty(\"produtos\", expect.arrayContaining([produto]))\n      |                              ^\n   68 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 67,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:39.949Z",
              "duration": 4,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-1de05c2de94a6dc8cd21178d9a31df64b9ae82a9",
      "title": "Listar produtos inexistentes",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 70,
        "column": 5
      },
      "duration": 42,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:70",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 42,
          "startTime": "2021-10-31T02:59:39.915Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.915Z",
              "duration": 36,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.921Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.930Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.950Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:39.956Z",
              "duration": 0,
              "snippet": "   71 |         const response = await request.get(`${baseURL}${productsPath}?_id=inexistente`)\n   72 |         expect(response.status()).toBe(200)\n      |                                   ^\n   73 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 72,
                "column": 35
              }
            },
            {
              "title": "expect.toEqual",
              "startTime": "2021-10-31T02:59:39.957Z",
              "duration": 0,
              "snippet": "   74 |         const responseData = await response.json()\n   75 |         expect(responseData.quantidade).toEqual(0)\n      |                                         ^\n   76 |         expect(responseData).toHaveProperty(\"produtos\", [])",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 75,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:39.957Z",
              "duration": 0,
              "snippet": "   75 |         expect(responseData.quantidade).toEqual(0)\n   76 |         expect(responseData).toHaveProperty(\"produtos\", [])\n      |                              ^\n   77 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 76,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:39.957Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-2aa4656b1f161325260019351351be01cd2620a5",
      "title": "Listar produtos por campo invalido",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 79,
        "column": 5
      },
      "duration": 62,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:79",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 62,
          "startTime": "2021-10-31T02:59:39.953Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.953Z",
              "duration": 33,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.962Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.972Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.985Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.013Z",
              "duration": 0,
              "snippet": "   80 |         const response = await request.get(`${baseURL}${productsPath}?invalido=invalido`)\n   81 |         expect(response.status()).toBe(400)\n      |                                   ^\n   82 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 81,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.014Z",
              "duration": 0,
              "snippet": "   83 |         const responseData = await response.json()\n   84 |         expect(responseData).toHaveProperty(\"invalido\", \"invalido não é permitido\")\n      |                              ^\n   85 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 84,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.014Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-ff8690058037bde729bd94cd070a8e634b4f25be",
      "title": "Listar produtos por preco e quantidade como texto",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 87,
        "column": 5
      },
      "duration": 57,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:87",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 57,
          "startTime": "2021-10-31T02:59:39.959Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:39.959Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.964Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.983Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:39.987Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.015Z",
              "duration": 0,
              "snippet": "   88 |         const response = await request.get(`${baseURL}${productsPath}?preco=a&quantidade=b`)\n   89 |         expect(response.status()).toBe(400)\n      |                                   ^\n   90 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 89,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.015Z",
              "duration": 0,
              "snippet": "   91 |         const responseData = await response.json()\n   92 |         expect(responseData).toHaveProperty(\"preco\", \"preco deve ser um número\")\n      |                              ^\n   93 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade deve ser um número\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 92,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.016Z",
              "duration": 0,
              "snippet": "   92 |         expect(responseData).toHaveProperty(\"preco\", \"preco deve ser um número\")\n   93 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade deve ser um número\")\n      |                              ^\n   94 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.016Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-a7b9056f5e7c6373fb33ae0158c93ebdccfc4e84",
      "title": "Listar produtos por preco e quantidade decimais",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 96,
        "column": 5
      },
      "duration": 49,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:96",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 49,
          "startTime": "2021-10-31T02:59:40.016Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.016Z",
              "duration": 34,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.030Z",
                  "duration": 1,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.037Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.049Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.063Z",
              "duration": 0,
              "snippet": "   97 |         const response = await request.get(`${baseURL}${productsPath}?preco=0.1&quantidade=0.2`)\n   98 |         expect(response.status()).toBe(400)\n      |                                   ^\n   99 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 98,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.064Z",
              "duration": 0,
              "snippet": "  100 |         const responseData = await response.json()\n  101 |         expect(responseData).toHaveProperty(\"preco\", \"preco deve ser um inteiro\")\n      |                              ^\n  102 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade deve ser um inteiro\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 101,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.064Z",
              "duration": 0,
              "snippet": "  101 |         expect(responseData).toHaveProperty(\"preco\", \"preco deve ser um inteiro\")\n  102 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade deve ser um inteiro\")\n      |                              ^\n  103 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 102,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.064Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-9be82b7259553177eb515b7a926a39e5f8535417",
      "title": "Listar produtos por preco e quantidade negativos",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 105,
        "column": 5
      },
      "duration": 41,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:105",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 41,
          "startTime": "2021-10-31T02:59:40.018Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.018Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.031Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.036Z",
                  "duration": 3,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.046Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.057Z",
              "duration": 0,
              "snippet": "  106 |         const response = await request.get(`${baseURL}${productsPath}?preco=-1&quantidade=-2`)\n  107 |         expect(response.status()).toBe(400)\n      |                                   ^\n  108 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 107,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.057Z",
              "duration": 1,
              "snippet": "  109 |         const responseData = await response.json()\n  110 |         expect(responseData).toHaveProperty(\"preco\", \"preco deve ser um número positivo\")\n      |                              ^\n  111 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade deve ser maior ou igual a 0\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 110,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.058Z",
              "duration": 0,
              "snippet": "  110 |         expect(responseData).toHaveProperty(\"preco\", \"preco deve ser um número positivo\")\n  111 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade deve ser maior ou igual a 0\")\n      |                              ^\n  112 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 111,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.058Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-c0aa22141ef0cd3a81b1b2c02ee1f27a7a631130",
      "title": "Cadastrar produto com sucesso",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 114,
        "column": 5
      },
      "duration": 33,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:114",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 33,
          "startTime": "2021-10-31T02:59:40.059Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.059Z",
              "duration": 25,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.066Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.077Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.083Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.091Z",
              "duration": 0,
              "snippet": "  124 |\n  125 |         expect(response.status()).toBe(201)\n      |                                   ^\n  126 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 125,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.092Z",
              "duration": 0,
              "snippet": "  127 |         const responseData = await response.json()\n  128 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n      |                              ^\n  129 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 128,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.092Z",
              "duration": 0,
              "snippet": "  128 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n  129 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)\n      |                              ^\n  130 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 129,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.092Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-540d10330161d85d29b0b2a2ce6e0b2a5b9e7e3b",
      "title": "Cadastrar produto com nome já existente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 132,
        "column": 5
      },
      "duration": 50,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:132",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 50,
          "startTime": "2021-10-31T02:59:40.067Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.067Z",
              "duration": 42,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.082Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.089Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.108Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.115Z",
              "duration": 0,
              "snippet": "  142 |\n  143 |         expect(response.status()).toBe(400)\n      |                                   ^\n  144 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 143,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.116Z",
              "duration": 0,
              "snippet": "  145 |         const responseData = await response.json()\n  146 |         expect(responseData).toHaveProperty(\"message\", \"Já existe produto com esse nome\")\n      |                              ^\n  147 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 146,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.116Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-a81b020d697fbfe9382fdd32a0ec76d139aa3637",
      "title": "Cadastrar produto com Token ausente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 149,
        "column": 5
      },
      "duration": 46,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:149",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 46,
          "startTime": "2021-10-31T02:59:40.094Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.095Z",
              "duration": 28,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.099Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.105Z",
                  "duration": 1,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.123Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.139Z",
              "duration": 0,
              "snippet": "  158 |\n  159 |         expect(response.status()).toBe(401)\n      |                                   ^\n  160 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 159,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.140Z",
              "duration": 0,
              "snippet": "  161 |         const responseData = await response.json()\n  162 |         expect(responseData).toHaveProperty(\n      |                              ^\n  163 |             \"message\",",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 162,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.140Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-582d1d5342c8ae4ac342a79d380b22608b1ea20f",
      "title": "Cadastrar produto com usuário não administrador",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 168,
        "column": 5
      },
      "duration": 61,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:168",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 61,
          "startTime": "2021-10-31T02:59:40.117Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.118Z",
              "duration": 41,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.123Z",
                  "duration": 1,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.142Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.158Z",
                  "duration": 1,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.166Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.170Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.176Z",
              "duration": 0,
              "snippet": "  186 |\n  187 |         expect(response.status()).toBe(403)\n      |                                   ^\n  188 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 187,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.177Z",
              "duration": 0,
              "snippet": "  189 |         const responseData = await response.json()\n  190 |         expect(responseData).toHaveProperty(\"message\", \"Rota exclusiva para administradores\")\n      |                              ^\n  191 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 190,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.177Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-12b5932d46b3af07d51f69398aa7dfe46148f446",
      "title": "Cadastrar produto sem campos obrigatórios",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 193,
        "column": 5
      },
      "duration": 33,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:193",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 33,
          "startTime": "2021-10-31T02:59:40.144Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.144Z",
              "duration": 25,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.156Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.163Z",
                  "duration": 1,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.168Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.174Z",
              "duration": 0,
              "snippet": "  198 |\n  199 |         expect(response.status()).toBe(400)\n      |                                   ^\n  200 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 199,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.175Z",
              "duration": 0,
              "snippet": "  201 |         const responseData = await response.json()\n  202 |         expect(responseData).toHaveProperty(\"nome\", \"nome é obrigatório\")\n      |                              ^\n  203 |         expect(responseData).toHaveProperty(\"preco\", \"preco é obrigatório\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 202,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.175Z",
              "duration": 0,
              "snippet": "  202 |         expect(responseData).toHaveProperty(\"nome\", \"nome é obrigatório\")\n  203 |         expect(responseData).toHaveProperty(\"preco\", \"preco é obrigatório\")\n      |                              ^\n  204 |         expect(responseData).toHaveProperty(\"descricao\", \"descricao é obrigatório\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 203,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.176Z",
              "duration": 0,
              "snippet": "  203 |         expect(responseData).toHaveProperty(\"preco\", \"preco é obrigatório\")\n  204 |         expect(responseData).toHaveProperty(\"descricao\", \"descricao é obrigatório\")\n      |                              ^\n  205 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade é obrigatório\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 204,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.176Z",
              "duration": 0,
              "snippet": "  204 |         expect(responseData).toHaveProperty(\"descricao\", \"descricao é obrigatório\")\n  205 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade é obrigatório\")\n      |                              ^\n  206 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 205,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.176Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-308be2a1d3bd02ab2cb3404cbbb881a6445c067e",
      "title": "Cadastrar produto com campo inexistente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 208,
        "column": 5
      },
      "duration": 30,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:208",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 30,
          "startTime": "2021-10-31T02:59:40.177Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.177Z",
              "duration": 23,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.181Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.190Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.199Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.205Z",
              "duration": 0,
              "snippet": "  219 |\n  220 |         expect(response.status()).toBe(400)\n      |                                   ^\n  221 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 220,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.205Z",
              "duration": 1,
              "snippet": "  222 |         const responseData = await response.json()\n  223 |         expect(responseData).toHaveProperty(\"inexistente\", \"inexistente não é permitido\")\n      |                              ^\n  224 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 223,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.206Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-c3981172188920deebc20f02091a7c2a5a825b27",
      "title": "Cadastrar produto com preco e quantidade negativos",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 226,
        "column": 5
      },
      "duration": 25,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:226",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 25,
          "startTime": "2021-10-31T02:59:40.179Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.179Z",
              "duration": 18,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.183Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.188Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.197Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.201Z",
              "duration": 0,
              "snippet": "  236 |\n  237 |         expect(response.status()).toBe(400)\n      |                                   ^\n  238 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 237,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.202Z",
              "duration": 0,
              "snippet": "  239 |         const responseData = await response.json()\n  240 |         expect(responseData).toHaveProperty(\"preco\", \"preco deve ser um número positivo\")\n      |                              ^\n  241 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade deve ser maior ou igual a 0\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 240,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.202Z",
              "duration": 0,
              "snippet": "  240 |         expect(responseData).toHaveProperty(\"preco\", \"preco deve ser um número positivo\")\n  241 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade deve ser maior ou igual a 0\")\n      |                              ^\n  242 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 241,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.203Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-9678b50fed992ea89a90a3e64dd7d8501e92b142",
      "title": "Buscar produto por ID",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 244,
        "column": 5
      },
      "duration": 37,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:244",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 37,
          "startTime": "2021-10-31T02:59:40.203Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.204Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.213Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.219Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.232Z",
                  "duration": 1,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.239Z",
              "duration": 0,
              "snippet": "  245 |         const response = await request.get(`${baseURL}${productsPath}/${produto._id}`)\n  246 |         expect(response.status()).toBe(200)\n      |                                   ^\n  247 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 246,
                "column": 35
              }
            },
            {
              "title": "expect.toEqual",
              "startTime": "2021-10-31T02:59:40.240Z",
              "duration": 0,
              "snippet": "  248 |         const responseData = await response.json()\n  249 |         expect(responseData).toEqual(produto)\n      |                              ^\n  250 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 249,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.240Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-f46a89505988042a9718dfdb1795e831a030c068",
      "title": "Buscar produto por ID não existente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 252,
        "column": 5
      },
      "duration": 29,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:252",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 29,
          "startTime": "2021-10-31T02:59:40.207Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.207Z",
              "duration": 20,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.214Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.221Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.226Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.235Z",
              "duration": 0,
              "snippet": "  253 |         const response = await request.get(`${baseURL}${productsPath}/1`)\n  254 |         expect(response.status()).toBe(400)\n      |                                   ^\n  255 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 254,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.235Z",
              "duration": 0,
              "snippet": "  256 |         const responseData = await response.json()\n  257 |         expect(responseData).toHaveProperty(\"message\", \"Produto não encontrado\")\n      |                              ^\n  258 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 257,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.236Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-7415dd7355c008a22ca510cd9cd38234584b6e63",
      "title": "Excluir produto",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 260,
        "column": 5
      },
      "duration": 37,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:260",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 37,
          "startTime": "2021-10-31T02:59:40.237Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.237Z",
              "duration": 25,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.241Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.247Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.262Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.269Z",
              "duration": 0,
              "snippet": "  263 |         })\n  264 |         expect(response.status()).toBe(200)\n      |                                   ^\n  265 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 264,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.273Z",
              "duration": 0,
              "snippet": "  266 |         const responseData = await response.json()\n  267 |         expect(responseData).toHaveProperty(\"message\", \"Registro excluído com sucesso\")\n      |                              ^\n  268 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 267,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.273Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-3f0a18eb1c2ca65c4b5047575e0c41cd75de30ee",
      "title": "Excluir produto inexistente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 270,
        "column": 5
      },
      "duration": 34,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:270",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 34,
          "startTime": "2021-10-31T02:59:40.242Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.243Z",
              "duration": 28,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.249Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.259Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.270Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.275Z",
              "duration": 0,
              "snippet": "  273 |         })\n  274 |         expect(response.status()).toBe(200)\n      |                                   ^\n  275 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 274,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.276Z",
              "duration": 0,
              "snippet": "  276 |         const responseData = await response.json()\n  277 |         expect(responseData).toHaveProperty(\"message\", \"Nenhum registro excluído\")\n      |                              ^\n  278 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 277,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.276Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-7bc2165ac523f4d0be21946a4779d7b488536d19",
      "title": "Excluir produto que faz parte de um carrinho",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 280,
        "column": 5
      },
      "duration": 47,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:280",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 47,
          "startTime": "2021-10-31T02:59:40.277Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.277Z",
              "duration": 33,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.284Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.300Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.309Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.316Z",
              "duration": 0,
              "snippet": "  74 |             })\n  75 |             expect(response.status()).toBe(201)\n     |                                       ^\n  76 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 75,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.321Z",
              "duration": 0,
              "snippet": "  289 |         })\n  290 |         expect(response.status()).toBe(400)\n      |                                   ^\n  291 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 290,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.322Z",
              "duration": 0,
              "snippet": "  292 |         const responseData = await response.json()\n  293 |         expect(responseData).toHaveProperty(\"message\", \"Não é permitido excluir produto que faz parte de carrinho\")\n      |                              ^\n  294 |         expect(responseData).toHaveProperty(\"idCarrinhos\", expect.arrayContaining([carrinho._id]))",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 293,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.322Z",
              "duration": 1,
              "snippet": "  293 |         expect(responseData).toHaveProperty(\"message\", \"Não é permitido excluir produto que faz parte de carrinho\")\n  294 |         expect(responseData).toHaveProperty(\"idCarrinhos\", expect.arrayContaining([carrinho._id]))\n      |                              ^\n  295 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 294,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.323Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-e8d0048b58d771a440e63fcdfc58d6b0281fd9ef",
      "title": "Excluir produto com Token inválido",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 297,
        "column": 5
      },
      "duration": 27,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:297",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 27,
          "startTime": "2021-10-31T02:59:40.279Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.279Z",
              "duration": 24,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.285Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.289Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.302Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.305Z",
              "duration": 0,
              "snippet": "  300 |         })\n  301 |         expect(response.status()).toBe(401)\n      |                                   ^\n  302 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 301,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.306Z",
              "duration": 0,
              "snippet": "  303 |         const responseData = await response.json()\n  304 |         expect(responseData).toHaveProperty(\n      |                              ^\n  305 |             \"message\",",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 304,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.306Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-eca2cd95dcf894cd962de45aa59654cd8d0ea873",
      "title": "Excluir produto com usuário não administrador",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 310,
        "column": 5
      },
      "duration": 41,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:310",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 41,
          "startTime": "2021-10-31T02:59:40.307Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.307Z",
              "duration": 21,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.314Z",
                  "duration": 1,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.321Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.327Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.336Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.342Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.347Z",
              "duration": 0,
              "snippet": "  321 |         })\n  322 |         expect(response.status()).toBe(403)\n      |                                   ^\n  323 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 322,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.347Z",
              "duration": 1,
              "snippet": "  324 |         const responseData = await response.json()\n  325 |         expect(responseData).toHaveProperty(\"message\", \"Rota exclusiva para administradores\")\n      |                              ^\n  326 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 325,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.348Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-c05a5c33dfa9e947f9527f59ebe88a407562852b",
      "title": "Editar produto",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 328,
        "column": 5
      },
      "duration": 26,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:328",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 26,
          "startTime": "2021-10-31T02:59:40.325Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.325Z",
              "duration": 15,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.330Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.334Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.339Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.349Z",
              "duration": 0,
              "snippet": "  337 |         })\n  338 |         expect(response.status()).toBe(200)\n      |                                   ^\n  339 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 338,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.349Z",
              "duration": 0,
              "snippet": "  340 |         const responseData = await response.json()\n  341 |         expect(responseData).toHaveProperty(\"message\", \"Registro alterado com sucesso\")\n      |                              ^\n  342 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 341,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.349Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-9a2ea7f07cd654ea38c25f57ca1474baf1ae70cb",
      "title": "Editar produto inexistente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 344,
        "column": 5
      },
      "duration": 46,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:344",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 46,
          "startTime": "2021-10-31T02:59:40.350Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.351Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.356Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.367Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.380Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.394Z",
              "duration": 0,
              "snippet": "  353 |         })\n  354 |         expect(response.status()).toBe(201)\n      |                                   ^\n  355 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 354,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.395Z",
              "duration": 0,
              "snippet": "  356 |         const responseData = await response.json()\n  357 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n      |                              ^\n  358 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 357,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.396Z",
              "duration": 0,
              "snippet": "  357 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n  358 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)\n      |                              ^\n  359 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 358,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.396Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-61bbfe48f193bb5eb997bcc440dc06c2a9bbfe7b",
      "title": "Editar produto com nome já existente",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 361,
        "column": 5
      },
      "duration": 49,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:361",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 49,
          "startTime": "2021-10-31T02:59:40.350Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.351Z",
              "duration": 26,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.362Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.368Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.376Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.382Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.387Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.397Z",
              "duration": 0,
              "snippet": "  378 |         })\n  379 |         expect(response.status()).toBe(400)\n      |                                   ^\n  380 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 379,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.398Z",
              "duration": 0,
              "snippet": "  381 |         const responseData = await response.json()\n  382 |         expect(responseData).toHaveProperty(\"message\", \"Já existe produto com esse nome\")\n      |                              ^\n  383 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 382,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.398Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-ea38302129d29b5518b3d1a6317b81dbd11e0443",
      "title": "Editar produto com Token inválido",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 385,
        "column": 5
      },
      "duration": 27,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:385",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 27,
          "startTime": "2021-10-31T02:59:40.397Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.397Z",
              "duration": 19,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.402Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.407Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.415Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.422Z",
              "duration": 0,
              "snippet": "  394 |         })\n  395 |         expect(response.status()).toBe(401)\n      |                                   ^\n  396 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 395,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.423Z",
              "duration": 0,
              "snippet": "  397 |         const responseData = await response.json()\n  398 |         expect(responseData).toHaveProperty(\n      |                              ^\n  399 |             \"message\",",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 398,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.423Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-3db86e036ec088ae6848bdbd0515f5fd8cf6c70b",
      "title": "Editar produto com usuário não administrador",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 404,
        "column": 5
      },
      "duration": 54,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:404",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 54,
          "startTime": "2021-10-31T02:59:40.400Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.400Z",
              "duration": 26,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.410Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.415Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.425Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.432Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.442Z",
              "duration": 0,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.452Z",
              "duration": 0,
              "snippet": "  421 |         })\n  422 |         expect(response.status()).toBe(403)\n      |                                   ^\n  423 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 422,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.453Z",
              "duration": 0,
              "snippet": "  424 |         const responseData = await response.json()\n  425 |         expect(responseData).toHaveProperty(\"message\", \"Rota exclusiva para administradores\")\n      |                              ^\n  426 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 425,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.453Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "aeaef2377201368692ab104935d687c0ef8b9b71-7920a40844ced0ac17b5d7f288f6535e2ec9b928",
      "title": "Editar produto sem campos obrigatórios",
      "projectName": "",
      "location": {
        "file": "produtos.spec.js",
        "line": 428,
        "column": 5
      },
      "duration": 45,
      "outcome": "expected",
      "path": [
        "produtos.spec.js:428",
        "Produtos endpoint @produtos"
      ],
      "results": [
        {
          "duration": 45,
          "startTime": "2021-10-31T02:59:40.429Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T02:59:40.429Z",
              "duration": 36,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.436Z",
                  "duration": 0,
                  "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 34,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.447Z",
                  "duration": 0,
                  "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 19,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-31T02:59:40.465Z",
                  "duration": 0,
                  "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T02:59:40.470Z",
              "duration": 0,
              "snippet": "  436 |\n  437 |         expect(response.status()).toBe(400)\n      |                                   ^\n  438 |",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 437,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.471Z",
              "duration": 1,
              "snippet": "  439 |         const responseData = await response.json()\n  440 |         expect(responseData).toHaveProperty(\"preco\", \"preco é obrigatório\")\n      |                              ^\n  441 |         expect(responseData).toHaveProperty(\"descricao\", \"descricao é obrigatório\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 440,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.472Z",
              "duration": 0,
              "snippet": "  440 |         expect(responseData).toHaveProperty(\"preco\", \"preco é obrigatório\")\n  441 |         expect(responseData).toHaveProperty(\"descricao\", \"descricao é obrigatório\")\n      |                              ^\n  442 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade é obrigatório\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 441,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.472Z",
              "duration": 0,
              "snippet": "  441 |         expect(responseData).toHaveProperty(\"descricao\", \"descricao é obrigatório\")\n  442 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade é obrigatório\")\n      |                              ^\n  443 |         expect(responseData).toHaveProperty(\"inexistente\", \"inexistente não é permitido\")",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 442,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T02:59:40.473Z",
              "duration": 0,
              "snippet": "  442 |         expect(responseData).toHaveProperty(\"quantidade\", \"quantidade é obrigatório\")\n  443 |         expect(responseData).toHaveProperty(\"inexistente\", \"inexistente não é permitido\")\n      |                              ^\n  444 |     })",
              "steps": [],
              "location": {
                "file": "produtos.spec.js",
                "line": 443,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T02:59:40.473Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}