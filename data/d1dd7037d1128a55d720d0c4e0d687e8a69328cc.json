{
  "fileId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc",
  "fileName": "usuarios.spec.js",
  "tests": [
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-cbc74cb4821f24ec39fee131bd4c32223a4c89d5",
      "title": "Listar usuários cadastrados",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 6,
        "column": 5
      },
      "duration": 16,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:6",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 16,
          "startTime": "2021-10-31T01:25:42.680Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.680Z",
              "duration": 2,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.685Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.694Z",
              "duration": 0,
              "snippet": "   9 |\n   10 |         expect(response.status()).toBe(200)\n      |                                   ^\n   11 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 10,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.695Z",
              "duration": 0,
              "snippet": "   12 |         const responseData = await response.json()\n   13 |         expect(responseData).toHaveProperty(\"quantidade\")\n      |                              ^\n   14 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 13,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.695Z",
              "duration": 0,
              "snippet": "   13 |         expect(responseData).toHaveProperty(\"quantidade\")\n   14 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))\n      |                              ^\n   15 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 14,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.695Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-daec21fcec678d7403a25f924a48679093ac13f6",
      "title": "Listar usuários filtrados por ID",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 17,
        "column": 5
      },
      "duration": 13,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:17",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 13,
          "startTime": "2021-10-31T01:25:42.689Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.689Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.693Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.700Z",
              "duration": 0,
              "snippet": "   20 |\n   21 |         expect(response.status()).toBe(200)\n      |                                   ^\n   22 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 21,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.701Z",
              "duration": 0,
              "snippet": "   23 |         const responseData = await response.json()\n   24 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n      |                              ^\n   25 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 24,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.701Z",
              "duration": 0,
              "snippet": "   24 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n   25 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))\n      |                              ^\n   26 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 25,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.701Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-f1fbf950a2b6c0577a597891036a498a4ea1b9a8",
      "title": "Listar usuários filtrados por Nome",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 28,
        "column": 5
      },
      "duration": 17,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:28",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 17,
          "startTime": "2021-10-31T01:25:42.696Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.696Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.702Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.708Z",
              "duration": 0,
              "snippet": "   31 |\n   32 |         expect(response.status()).toBe(200)\n      |                                   ^\n   33 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 32,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-31T01:25:42.709Z",
              "duration": 0,
              "snippet": "   34 |         const responseData = await response.json()\n   35 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   36 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 35,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.709Z",
              "duration": 0,
              "snippet": "   35 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   36 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))\n      |                              ^\n   37 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 36,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.709Z",
              "duration": 4,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-a6108885466509584b2f0ec4c07bd2692728ba3e",
      "title": "Listar usuários filtrados por Email",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 39,
        "column": 5
      },
      "duration": 12,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:39",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 12,
          "startTime": "2021-10-31T01:25:42.703Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.703Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.707Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.712Z",
              "duration": 1,
              "snippet": "   42 |\n   43 |         expect(response.status()).toBe(200)\n      |                                   ^\n   44 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 43,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.714Z",
              "duration": 0,
              "snippet": "   45 |         const responseData = await response.json()\n   46 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n      |                              ^\n   47 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 46,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.714Z",
              "duration": 0,
              "snippet": "   46 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n   47 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))\n      |                              ^\n   48 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 47,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.714Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-7bad9fe226aa8b3bfa19c30b2d33ea8e70cf7767",
      "title": "Listar usuários filtrados por Password",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 50,
        "column": 5
      },
      "duration": 10,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:50",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 10,
          "startTime": "2021-10-31T01:25:42.713Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.713Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.717Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.721Z",
              "duration": 0,
              "snippet": "   53 |\n   54 |         expect(response.status()).toBe(200)\n      |                                   ^\n   55 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 54,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-31T01:25:42.722Z",
              "duration": 0,
              "snippet": "   56 |         const responseData = await response.json()\n   57 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   58 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 57,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.722Z",
              "duration": 0,
              "snippet": "   57 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   58 |         expect(responseData).toHaveProperty(\"usuarios\", expect.arrayContaining([usuario]))\n      |                              ^\n   59 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 58,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.722Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-f57288ad7e9eafae1e6dfddcd5acc3efb9faf10f",
      "title": "Listar usuários filtrados por Administrador",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 61,
        "column": 5
      },
      "duration": 11,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:61",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 11,
          "startTime": "2021-10-31T01:25:42.716Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.716Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.720Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.724Z",
              "duration": 0,
              "snippet": "   64 |\n   65 |         expect(response.status()).toBe(200)\n      |                                   ^\n   66 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 65,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-10-31T01:25:42.725Z",
              "duration": 0,
              "snippet": "   67 |         const responseData = await response.json()\n   68 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   69 |         expect(responseData).toHaveProperty(",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 68,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.726Z",
              "duration": 0,
              "snippet": "   68 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   69 |         expect(responseData).toHaveProperty(\n      |                              ^\n   70 |             \"usuarios\",",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 69,
                "column": 30
              }
            },
            {
              "title": "expect.not.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.726Z",
              "duration": 0,
              "snippet": "   72 |         )\n   73 |         expect(responseData).not.toHaveProperty(\n      |                                  ^\n   74 |             \"usuarios\",",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 73,
                "column": 34
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.727Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-9b84959025528156b822405729700f4052e794b3",
      "title": "Listar usuários inexistente",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 79,
        "column": 5
      },
      "duration": 5,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:79",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 5,
          "startTime": "2021-10-31T01:25:42.724Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.724Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.727Z",
              "duration": 0,
              "snippet": "   80 |         const response = await request.get(`${baseURL}${userPath}?_id=a`)\n   81 |         expect(response.status()).toBe(200)\n      |                                   ^\n   82 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 81,
                "column": 35
              }
            },
            {
              "title": "expect.toEqual",
              "startTime": "2021-10-31T01:25:42.728Z",
              "duration": 0,
              "snippet": "   83 |         const responseData = await response.json()\n   84 |         expect(responseData.quantidade).toEqual(0)\n      |                                         ^\n   85 |         expect(responseData).toHaveProperty(\"usuarios\", [])",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 84,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.728Z",
              "duration": 0,
              "snippet": "   84 |         expect(responseData.quantidade).toEqual(0)\n   85 |         expect(responseData).toHaveProperty(\"usuarios\", [])\n      |                              ^\n   86 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 85,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.728Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-c04780bb1e30a46dd9cec7886f2982e4e036fbb3",
      "title": "Listar usuários por campo invalido",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 88,
        "column": 5
      },
      "duration": 6,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:88",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 6,
          "startTime": "2021-10-31T01:25:42.727Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.728Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.732Z",
              "duration": 0,
              "snippet": "   89 |         const response = await request.get(`${baseURL}${userPath}?invalido=a`)\n   90 |         expect(response.status()).toBe(400)\n      |                                   ^\n   91 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 90,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.733Z",
              "duration": 0,
              "snippet": "   92 |         const responseData = await response.json()\n   93 |         expect(responseData).toHaveProperty(\"invalido\", \"invalido não é permitido\")\n      |                              ^\n   94 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.733Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-363a468f0f2e5674a239898fcaeb58abe0505354",
      "title": "Cadastrar usuário com sucesso",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 96,
        "column": 5
      },
      "duration": 6,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:96",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 6,
          "startTime": "2021-10-31T01:25:42.729Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.729Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.733Z",
              "duration": 0,
              "snippet": "  105 |\n  106 |         expect(response.status()).toBe(201)\n      |                                   ^\n  107 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 106,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.734Z",
              "duration": 0,
              "snippet": "  108 |         const responseData = await response.json()\n  109 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n      |                              ^\n  110 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 109,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.734Z",
              "duration": 0,
              "snippet": "  109 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n  110 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)\n      |                              ^\n  111 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 110,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.734Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-1d2565e42514331650363a78dcb0f602cc19df64",
      "title": "Cadastrar usuário com email já existente",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 113,
        "column": 5
      },
      "duration": 10,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:113",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 10,
          "startTime": "2021-10-31T01:25:42.734Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.734Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.739Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.743Z",
              "duration": 0,
              "snippet": "  123 |\n  124 |         expect(response.status()).toBe(400)\n      |                                   ^\n  125 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 124,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.743Z",
              "duration": 0,
              "snippet": "  126 |         const responseData = await response.json()\n  127 |         expect(responseData).toHaveProperty(\"message\", \"Este email já está sendo usado\")\n      |                              ^\n  128 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 127,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.743Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-440472afbecaa68c9554f4d2c740686381626767",
      "title": "Cadastrar usuário sem campos obrigatórios",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 130,
        "column": 5
      },
      "duration": 7,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:130",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 7,
          "startTime": "2021-10-31T01:25:42.735Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.735Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.739Z",
              "duration": 1,
              "snippet": "  134 |\n  135 |         expect(response.status()).toBe(400)\n      |                                   ^\n  136 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 135,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.741Z",
              "duration": 0,
              "snippet": "  137 |         const responseData = await response.json()\n  138 |         expect(responseData).toHaveProperty(\"nome\", \"nome é obrigatório\")\n      |                              ^\n  139 |         expect(responseData).toHaveProperty(\"email\", \"email é obrigatório\")",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 138,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.741Z",
              "duration": 0,
              "snippet": "  138 |         expect(responseData).toHaveProperty(\"nome\", \"nome é obrigatório\")\n  139 |         expect(responseData).toHaveProperty(\"email\", \"email é obrigatório\")\n      |                              ^\n  140 |         expect(responseData).toHaveProperty(\"password\", \"password é obrigatório\")",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 139,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.741Z",
              "duration": 0,
              "snippet": "  139 |         expect(responseData).toHaveProperty(\"email\", \"email é obrigatório\")\n  140 |         expect(responseData).toHaveProperty(\"password\", \"password é obrigatório\")\n      |                              ^\n  141 |         expect(responseData).toHaveProperty(\"administrador\", \"administrador é obrigatório\")",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 140,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.742Z",
              "duration": 0,
              "snippet": "  140 |         expect(responseData).toHaveProperty(\"password\", \"password é obrigatório\")\n  141 |         expect(responseData).toHaveProperty(\"administrador\", \"administrador é obrigatório\")\n      |                              ^\n  142 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 141,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.742Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-1af3a9749627ed34fbd25feb5ff6625a5e9d0f6f",
      "title": "Cadastrar usuário com campo administrador numérico",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 144,
        "column": 5
      },
      "duration": 19,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:144",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 19,
          "startTime": "2021-10-31T01:25:42.744Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.744Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.756Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.761Z",
              "duration": 0,
              "snippet": "  159 |\n  160 |         expect(response.status()).toBe(400)\n      |                                   ^\n  161 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 160,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.762Z",
              "duration": 0,
              "snippet": "  162 |         const responseData = await response.json()\n  163 |         expect(responseData).toHaveProperty(\"administrador\", \"administrador deve ser 'true' ou 'false'\")\n      |                              ^\n  164 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 163,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.762Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-58c959fa9487003b8640f89e843d4cba672c1a6f",
      "title": "Cadastrar usuário com campo administrador booleano",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 166,
        "column": 5
      },
      "duration": 19,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:166",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 19,
          "startTime": "2021-10-31T01:25:42.745Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.746Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.754Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.763Z",
              "duration": 0,
              "snippet": "  181 |\n  182 |         expect(response.status()).toBe(400)\n      |                                   ^\n  183 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 182,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.764Z",
              "duration": 0,
              "snippet": "  184 |         const responseData = await response.json()\n  185 |         expect(responseData).toHaveProperty(\"administrador\", \"administrador deve ser 'true' ou 'false'\")\n      |                              ^\n  186 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 185,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.764Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-7eeffb2336b204cfcd8e2bd5acd04669034b3f80",
      "title": "Buscar usuário por ID",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 188,
        "column": 5
      },
      "duration": 20,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:188",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 20,
          "startTime": "2021-10-31T01:25:42.764Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.764Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.779Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.782Z",
              "duration": 1,
              "snippet": "  191 |\n  192 |         expect(response.status()).toBe(200)\n      |                                   ^\n  193 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 192,
                "column": 35
              }
            },
            {
              "title": "expect.toEqual",
              "startTime": "2021-10-31T01:25:42.783Z",
              "duration": 0,
              "snippet": "  194 |         const responseData = await response.json()\n  195 |         expect(responseData).toEqual(usuario)\n      |                              ^\n  196 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 195,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.783Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-dde8a735413cbc0c39ef95b4d228f888d75fe2c1",
      "title": "Buscar usuário não encontrado",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 198,
        "column": 5
      },
      "duration": 9,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:198",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 9,
          "startTime": "2021-10-31T01:25:42.766Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.766Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.774Z",
              "duration": 0,
              "snippet": "  200 |\n  201 |         expect(response.status()).toBe(400)\n      |                                   ^\n  202 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 201,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.775Z",
              "duration": 0,
              "snippet": "  203 |         const responseData = await response.json()\n  204 |         expect(responseData).toHaveProperty(\"message\", \"Usuário não encontrado\")\n      |                              ^\n  205 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 204,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.775Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-8b89f36166005c6fc640139793a91eb736b093b6",
      "title": "Excluir usuário",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 207,
        "column": 5
      },
      "duration": 11,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:207",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 11,
          "startTime": "2021-10-31T01:25:42.776Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.776Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.783Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.786Z",
              "duration": 0,
              "snippet": "  210 |\n  211 |         expect(response.status()).toBe(200)\n      |                                   ^\n  212 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 211,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.787Z",
              "duration": 0,
              "snippet": "  213 |         const responseData = await response.json()\n  214 |         expect(responseData).toHaveProperty(\"message\", \"Registro excluído com sucesso\")\n      |                              ^\n  215 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 214,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.787Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-16a05d4dcc7f78811744937d530fb2ef4230af5b",
      "title": "Excluir usuário não existente",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 217,
        "column": 5
      },
      "duration": 13,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:217",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 13,
          "startTime": "2021-10-31T01:25:42.784Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.785Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.797Z",
              "duration": 0,
              "snippet": "  219 |\n  220 |         expect(response.status()).toBe(200)\n      |                                   ^\n  221 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 220,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.797Z",
              "duration": 0,
              "snippet": "  222 |         const responseData = await response.json()\n  223 |         expect(responseData).toHaveProperty(\"message\", \"Nenhum registro excluído\")\n      |                              ^\n  224 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 223,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.798Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-d64528eeab2fc0e09153b3c76404f2b28eedfe84",
      "title": "Excluir usuário com carrinho",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 226,
        "column": 5
      },
      "duration": 31,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:226",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 31,
          "startTime": "2021-10-31T01:25:42.794Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.794Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.798Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.804Z",
              "duration": 2,
              "snippet": "  18 |             })\n  19 |             expect(response.status()).toBe(200)\n     |                                       ^\n  20 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 19,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.814Z",
              "duration": 0,
              "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 53,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.821Z",
              "duration": 0,
              "snippet": "  74 |             })\n  75 |             expect(response.status()).toBe(201)\n     |                                       ^\n  76 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 75,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.824Z",
              "duration": 0,
              "snippet": "  240 |\n  241 |         expect(response.status()).toBe(400)\n      |                                   ^\n  242 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 241,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.824Z",
              "duration": 0,
              "snippet": "  243 |         const responseData = await response.json()\n  244 |         expect(responseData).toHaveProperty(\"message\", \"Não é permitido excluir usuário com carrinho cadastrado\")\n      |                              ^\n  245 |         expect(responseData).toHaveProperty(\"idCarrinho\", carrinho._id)",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 244,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.825Z",
              "duration": 0,
              "snippet": "  244 |         expect(responseData).toHaveProperty(\"message\", \"Não é permitido excluir usuário com carrinho cadastrado\")\n  245 |         expect(responseData).toHaveProperty(\"idCarrinho\", carrinho._id)\n      |                              ^\n  246 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 245,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.825Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-e56403109c97c85bdb88e8d44bf80db903a3b560",
      "title": "Editar usuário",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 248,
        "column": 5
      },
      "duration": 15,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:248",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 15,
          "startTime": "2021-10-31T01:25:42.798Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.798Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.805Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.812Z",
              "duration": 0,
              "snippet": "  258 |\n  259 |         expect(response.status()).toBe(200)\n      |                                   ^\n  260 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 259,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.813Z",
              "duration": 0,
              "snippet": "  261 |         const responseData = await response.json()\n  262 |         expect(responseData).toHaveProperty(\"message\", \"Registro alterado com sucesso\")\n      |                              ^\n  263 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 262,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.813Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-a551c28fff3f204f4cb9c93c587068e317b8eb4c",
      "title": "Editar usuário com ID não encontrado",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 265,
        "column": 5
      },
      "duration": 7,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:265",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 7,
          "startTime": "2021-10-31T01:25:42.815Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.815Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.819Z",
              "duration": 0,
              "snippet": "  274 |\n  275 |         expect(response.status()).toBe(201)\n      |                                   ^\n  276 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 275,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.820Z",
              "duration": 0,
              "snippet": "  277 |         const responseData = await response.json()\n  278 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n      |                              ^\n  279 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 278,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.820Z",
              "duration": 0,
              "snippet": "  278 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n  279 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)\n      |                              ^\n  280 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 279,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.820Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-36f2d518574b16521aeb44bda3f95e417856d86c",
      "title": "Editar usuário com email já existente",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 282,
        "column": 5
      },
      "duration": 35,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:282",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 35,
          "startTime": "2021-10-31T01:25:42.822Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.822Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.841Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.848Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.856Z",
              "duration": 0,
              "snippet": "  293 |\n  294 |         expect(response.status()).toBe(400)\n      |                                   ^\n  295 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 294,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.857Z",
              "duration": 0,
              "snippet": "  296 |         const responseData = await response.json()\n  297 |         expect(responseData).toHaveProperty(\"message\", \"Este email já está sendo usado\")\n      |                              ^\n  298 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 297,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.857Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "d1dd7037d1128a55d720d0c4e0d687e8a69328cc-374e8f0d82646072cf8adfe0e1f3147b434c7d39",
      "title": "Editar usuário com campo invalido",
      "projectName": "",
      "location": {
        "file": "usuarios.spec.js",
        "line": 300,
        "column": 5
      },
      "duration": 21,
      "outcome": "expected",
      "path": [
        "usuarios.spec.js:300",
        "Usuários endpoint @usuarios"
      ],
      "results": [
        {
          "duration": 21,
          "startTime": "2021-10-31T01:25:42.826Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:25:42.826Z",
              "duration": 0,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.843Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:25:42.846Z",
              "duration": 0,
              "snippet": "  311 |\n  312 |         expect(response.status()).toBe(400)\n      |                                   ^\n  313 |",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 312,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-10-31T01:25:42.846Z",
              "duration": 0,
              "snippet": "  314 |         const responseData = await response.json()\n  315 |         expect(responseData).toHaveProperty(\"invalido\", \"invalido não é permitido\")\n      |                              ^\n  316 |     })",
              "steps": [],
              "location": {
                "file": "usuarios.spec.js",
                "line": 315,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:25:42.846Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}