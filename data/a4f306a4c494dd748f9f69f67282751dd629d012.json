{
  "fileId": "a4f306a4c494dd748f9f69f67282751dd629d012",
  "fileName": "carrinhos.spec.js",
  "tests": [
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-1476c9a5a8a35438b40c1b601d9e775a6bd13c8e",
      "title": "Listar carrinhos cadastrados",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 31,
        "column": 5
      },
      "duration": 126,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:31",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 126,
          "startTime": "2021-11-03T02:03:01.915Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:01.915Z",
              "duration": 105,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:01.976Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:01.992Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.005Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.019Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.037Z",
              "duration": 0,
              "snippet": "   32 |         const response = await request.get(`${baseURL}${cartPath}`)\n   33 |         expect(response.status()).toBe(200)\n      |                                   ^\n   34 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 33,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.038Z",
              "duration": 0,
              "snippet": "   35 |         const responseData = await response.json()\n   36 |         expect(responseData).toHaveProperty(\"quantidade\")\n      |                              ^\n   37 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 36,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.039Z",
              "duration": 0,
              "snippet": "   36 |         expect(responseData).toHaveProperty(\"quantidade\")\n   37 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))\n      |                              ^\n   38 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 37,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.040Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-87af0eae14034ee7828a925179e1b56fd1889d3c",
      "title": "Listar carrinhos filtrados por ID",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 40,
        "column": 5
      },
      "duration": 59,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:40",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 59,
          "startTime": "2021-11-03T02:03:02.057Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.058Z",
              "duration": 49,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.082Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.091Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.098Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.107Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.112Z",
              "duration": 0,
              "snippet": "   41 |         const response = await request.get(`${baseURL}${cartPath}?_id=${carrinho._id}`)\n   42 |         expect(response.status()).toBe(200)\n      |                                   ^\n   43 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 42,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.113Z",
              "duration": 1,
              "snippet": "   44 |         const responseData = await response.json()\n   45 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n      |                              ^\n   46 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 45,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.114Z",
              "duration": 0,
              "snippet": "   45 |         expect(responseData).toHaveProperty(\"quantidade\", 1)\n   46 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))\n      |                              ^\n   47 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 46,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.115Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-1b078680bec125e115e0fa5dd34a2d063c0cf140",
      "title": "Listar carrinhos filtrados por Preco Total",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 49,
        "column": 5
      },
      "duration": 44,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:49",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 44,
          "startTime": "2021-11-03T02:03:02.044Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.044Z",
              "duration": 37,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.051Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.057Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.071Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.080Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.086Z",
              "duration": 0,
              "snippet": "   50 |         const response = await request.get(`${baseURL}${cartPath}?precoTotal=${carrinho.precoTotal}`)\n   51 |         expect(response.status()).toBe(200)\n      |                                   ^\n   52 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 51,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-11-03T02:03:02.087Z",
              "duration": 0,
              "snippet": "   53 |         const responseData = await response.json()\n   54 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   55 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 54,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.087Z",
              "duration": 0,
              "snippet": "   54 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   55 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))\n      |                              ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 55,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.087Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-5f96367e086d30528e0b1d6eea3391a43fe5c9cb",
      "title": "Listar carrinhos filtrados por Quantidade Total",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 42,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:58",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 42,
          "startTime": "2021-11-03T02:03:02.090Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.090Z",
              "duration": 35,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.096Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.104Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.118Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.125Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.130Z",
              "duration": 0,
              "snippet": "   59 |         const response = await request.get(`${baseURL}${cartPath}?quantidadeTotal=${carrinho.quantidadeTotal}`)\n   60 |         expect(response.status()).toBe(200)\n      |                                   ^\n   61 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 60,
                "column": 35
              }
            },
            {
              "title": "expect.toBeGreaterThanOrEqual",
              "startTime": "2021-11-03T02:03:02.131Z",
              "duration": 0,
              "snippet": "   62 |         const responseData = await response.json()\n   63 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n      |                                         ^\n   64 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 63,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.131Z",
              "duration": 1,
              "snippet": "   63 |         expect(responseData.quantidade).toBeGreaterThanOrEqual(1)\n   64 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))\n      |                              ^\n   65 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 64,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.132Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-06bf45d12b196b60f2c84dc3e63c33cb0b2948cf",
      "title": "Listar carrinhos filtrados por ID do usuário",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 67,
        "column": 5
      },
      "duration": 40,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:67",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 40,
          "startTime": "2021-11-03T02:03:02.116Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.117Z",
              "duration": 35,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.124Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.130Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.141Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.148Z",
                  "duration": 1,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.155Z",
              "duration": 0,
              "snippet": "   68 |         const response = await request.get(`${baseURL}${cartPath}?idUsuario=${carrinho.idUsuario}`)\n   69 |         expect(response.status()).toBe(200)\n      |                                   ^\n   70 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 69,
                "column": 35
              }
            },
            {
              "title": "expect.toEqual",
              "startTime": "2021-11-03T02:03:02.155Z",
              "duration": 1,
              "snippet": "   71 |         const responseData = await response.json()\n   72 |         expect(responseData.quantidade).toEqual(1)\n      |                                         ^\n   73 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 72,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.156Z",
              "duration": 0,
              "snippet": "   72 |         expect(responseData.quantidade).toEqual(1)\n   73 |         expect(responseData).toHaveProperty(\"carrinhos\", expect.arrayContaining([carrinho]))\n      |                              ^\n   74 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 73,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.156Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-e6f3ceb3e5dd4135fccb71e394329723f92cf019",
      "title": "Listar carrinho inexistente",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 76,
        "column": 5
      },
      "duration": 35,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:76",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 35,
          "startTime": "2021-11-03T02:03:02.133Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.133Z",
              "duration": 30,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.139Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.146Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.150Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.163Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.166Z",
              "duration": 0,
              "snippet": "   77 |         const response = await request.get(`${baseURL}${cartPath}?idUsuario=abc`)\n   78 |         expect(response.status()).toBe(200)\n      |                                   ^\n   79 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 78,
                "column": 35
              }
            },
            {
              "title": "expect.toEqual",
              "startTime": "2021-11-03T02:03:02.167Z",
              "duration": 0,
              "snippet": "   80 |         const responseData = await response.json()\n   81 |         expect(responseData.quantidade).toEqual(0)\n      |                                         ^\n   82 |         expect(responseData).toHaveProperty(\"carrinhos\", [])",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 81,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.167Z",
              "duration": 0,
              "snippet": "   81 |         expect(responseData.quantidade).toEqual(0)\n   82 |         expect(responseData).toHaveProperty(\"carrinhos\", [])\n      |                              ^\n   83 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 82,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.168Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-b06d14fb977ba9b2abea58ff8dad2520008669ed",
      "title": "Listar carrinho com preco e quantidade como texto",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 85,
        "column": 5
      },
      "duration": 47,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:85",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 47,
          "startTime": "2021-11-03T02:03:02.158Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.158Z",
              "duration": 37,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.171Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.179Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.186Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.195Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.204Z",
              "duration": 0,
              "snippet": "   86 |         const response = await request.get(`${baseURL}${cartPath}?precoTotal=a&quantidadeTotal=b`)\n   87 |         expect(response.status()).toBe(400)\n      |                                   ^\n   88 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 87,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.205Z",
              "duration": 0,
              "snippet": "   89 |         const responseData = await response.json()\n   90 |         expect(responseData).toHaveProperty(\"precoTotal\", \"precoTotal deve ser um número\")\n      |                              ^\n   91 |         expect(responseData).toHaveProperty(\"quantidadeTotal\", \"quantidadeTotal deve ser um número\")",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 90,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.205Z",
              "duration": 0,
              "snippet": "   90 |         expect(responseData).toHaveProperty(\"precoTotal\", \"precoTotal deve ser um número\")\n   91 |         expect(responseData).toHaveProperty(\"quantidadeTotal\", \"quantidadeTotal deve ser um número\")\n      |                              ^\n   92 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 91,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.205Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-07ed649b30bda4ecb4bba7235178ab1dd7945652",
      "title": "Listar carrinho com preco e quantidade negativos",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 94,
        "column": 5
      },
      "duration": 25,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:94",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 25,
          "startTime": "2021-11-03T02:03:02.169Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.169Z",
              "duration": 20,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.173Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.177Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.181Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.188Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.193Z",
              "duration": 0,
              "snippet": "   95 |         const response = await request.get(`${baseURL}${cartPath}?precoTotal=-1&quantidadeTotal=-2`)\n   96 |         expect(response.status()).toBe(400)\n      |                                   ^\n   97 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 96,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.193Z",
              "duration": 0,
              "snippet": "   98 |         const responseData = await response.json()\n   99 |         expect(responseData).toHaveProperty(\"precoTotal\", \"precoTotal deve ser um número positivo\")\n      |                              ^\n  100 |         expect(responseData).toHaveProperty(\"quantidadeTotal\", \"quantidadeTotal deve ser um número positivo\")",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 99,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.193Z",
              "duration": 0,
              "snippet": "   99 |         expect(responseData).toHaveProperty(\"precoTotal\", \"precoTotal deve ser um número positivo\")\n  100 |         expect(responseData).toHaveProperty(\"quantidadeTotal\", \"quantidadeTotal deve ser um número positivo\")\n      |                              ^\n  101 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 100,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.194Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-89c3bfc603ee2f941afd8c189b4a70e2ae76faf9",
      "title": "Listar carrinho com preco e quantidade decimais",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 103,
        "column": 5
      },
      "duration": 37,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:103",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 37,
          "startTime": "2021-11-03T02:03:02.196Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.196Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.202Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.208Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.218Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.225Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.231Z",
              "duration": 0,
              "snippet": "  104 |         const response = await request.get(`${baseURL}${cartPath}?precoTotal=0.1&quantidadeTotal=0.2`)\n  105 |         expect(response.status()).toBe(400)\n      |                                   ^\n  106 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 105,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.231Z",
              "duration": 1,
              "snippet": "  107 |         const responseData = await response.json()\n  108 |         expect(responseData).toHaveProperty(\"precoTotal\", \"precoTotal deve ser um inteiro\")\n      |                              ^\n  109 |         expect(responseData).toHaveProperty(\"quantidadeTotal\", \"quantidadeTotal deve ser um inteiro\")",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 108,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.232Z",
              "duration": 0,
              "snippet": "  108 |         expect(responseData).toHaveProperty(\"precoTotal\", \"precoTotal deve ser um inteiro\")\n  109 |         expect(responseData).toHaveProperty(\"quantidadeTotal\", \"quantidadeTotal deve ser um inteiro\")\n      |                              ^\n  110 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 109,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.232Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-a29ade171ab5fc42d18bbb7a97ad1c861d6c0b8c",
      "title": "Cadastrar carrinho com sucesso",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 112,
        "column": 5
      },
      "duration": 43,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:112",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 43,
          "startTime": "2021-11-03T02:03:02.206Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.206Z",
              "duration": 26,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.210Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.217Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.223Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.232Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.236Z",
              "duration": 0,
              "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 53,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.240Z",
              "duration": 0,
              "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 31,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.247Z",
              "duration": 0,
              "snippet": "  125 |         })\n  126 |         expect(response.status()).toBe(201)\n      |                                   ^\n  127 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 126,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.248Z",
              "duration": 0,
              "snippet": "  128 |         const responseData = await response.json()\n  129 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n      |                              ^\n  130 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 129,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.248Z",
              "duration": 0,
              "snippet": "  129 |         expect(responseData).toHaveProperty(\"message\", \"Cadastro realizado com sucesso\")\n  130 |         expect(responseData).toHaveProperty(\"_id\", responseData._id)\n      |                              ^\n  131 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 130,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.248Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-b63a8d0d756a72099f2bbe9bb9c4daecbc126fa6",
      "title": "Cadastrar carrinho com produto duplicado",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 133,
        "column": 5
      },
      "duration": 44,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:133",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 44,
          "startTime": "2021-11-03T02:03:02.234Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.234Z",
              "duration": 28,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.242Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.246Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.256Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.262Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.267Z",
              "duration": 0,
              "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 53,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.271Z",
              "duration": 0,
              "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 31,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.276Z",
              "duration": 1,
              "snippet": "  157 |\n  158 |         expect(response.status()).toBe(400)\n      |                                   ^\n  159 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 158,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.277Z",
              "duration": 0,
              "snippet": "  160 |         const responseData = await response.json()\n  161 |         expect(responseData).toHaveProperty(\"message\", \"Não é permitido possuir produto duplicado\")\n      |                              ^\n  162 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 161,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.278Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-4aa8540a8116f585a046d1c3f8c7233899e7fbe9",
      "title": "Cadastrar mais de um carrinho por usuário",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 164,
        "column": 5
      },
      "duration": 34,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:164",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 34,
          "startTime": "2021-11-03T02:03:02.249Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.250Z",
              "duration": 28,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.255Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.260Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.272Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.278Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.283Z",
              "duration": 0,
              "snippet": "  180 |\n  181 |         expect(response.status()).toBe(400)\n      |                                   ^\n  182 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 181,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.283Z",
              "duration": 0,
              "snippet": "  183 |         const responseData = await response.json()\n  184 |         expect(responseData).toHaveProperty(\"message\", \"Não é permitido ter mais de 1 carrinho\")\n      |                              ^\n  185 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 184,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.283Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-1b520a67c44de0c4574846bb74ff161c62643606",
      "title": "Cadastrar carrinho com produto inexistente",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 187,
        "column": 5
      },
      "duration": 43,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:187",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 43,
          "startTime": "2021-11-03T02:03:02.279Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.279Z",
              "duration": 28,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.286Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.289Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.297Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.302Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.311Z",
              "duration": 0,
              "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 53,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.315Z",
              "duration": 0,
              "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 31,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.320Z",
              "duration": 0,
              "snippet": "  207 |\n  208 |         expect(response.status()).toBe(400)\n      |                                   ^\n  209 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 208,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.321Z",
              "duration": 0,
              "snippet": "  210 |         const responseData = await response.json()\n  211 |         expect(responseData).toHaveProperty(\"message\", \"Produto não encontrado\")\n      |                              ^\n  212 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 211,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.321Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-3be1f6c77a0e0d29719fdc5106b1b20dc60cbc19",
      "title": "Cadastrar carrinho com produto em falta",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 214,
        "column": 5
      },
      "duration": 48,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:214",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 48,
          "startTime": "2021-11-03T02:03:02.284Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.284Z",
              "duration": 26,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.290Z",
                  "duration": 1,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.295Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.298Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.309Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.314Z",
              "duration": 0,
              "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 53,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.319Z",
              "duration": 0,
              "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 31,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.330Z",
              "duration": 0,
              "snippet": "  244 |\n  245 |         expect(response.status()).toBe(400)\n      |                                   ^\n  246 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 245,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.331Z",
              "duration": 0,
              "snippet": "  247 |         const responseData = await response.json()\n  248 |         expect(responseData).toHaveProperty(\"message\", \"Produto não possui quantidade suficiente\")\n      |                              ^\n  249 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 248,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.331Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-c182517054ebd13cc16194481fe2cd74f806291f",
      "title": "Cadastrar carrinho com Token ausente",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 251,
        "column": 5
      },
      "duration": 33,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:251",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 33,
          "startTime": "2021-11-03T02:03:02.324Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.324Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.328Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.339Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.345Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.351Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.355Z",
              "duration": 0,
              "snippet": "  262 |\n  263 |         expect(response.status()).toBe(401)\n      |                                   ^\n  264 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 263,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.356Z",
              "duration": 0,
              "snippet": "  265 |         const responseData = await response.json()\n  266 |         expect(responseData).toHaveProperty(\n      |                              ^\n  267 |             \"message\",",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 266,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.356Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-74d3fdd847de036f8ad3882f17a07806ed316285",
      "title": "Cadastrar carrinho com valor inexistente",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 272,
        "column": 5
      },
      "duration": 28,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:272",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 28,
          "startTime": "2021-11-03T02:03:02.336Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.336Z",
              "duration": 22,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.340Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.343Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.349Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.357Z",
                  "duration": 1,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.362Z",
              "duration": 0,
              "snippet": "  279 |\n  280 |         expect(response.status()).toBe(400)\n      |                                   ^\n  281 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 280,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.363Z",
              "duration": 0,
              "snippet": "  282 |         const responseData = await response.json()\n  283 |         expect(responseData).toHaveProperty(\"inexistente\", \"inexistente não é permitido\")\n      |                              ^\n  284 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 283,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.363Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-d8633641def0b4b75ce290091297ab59ba030698",
      "title": "Buscar carrinho por ID",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 286,
        "column": 5
      },
      "duration": 32,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:286",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 32,
          "startTime": "2021-11-03T02:03:02.357Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.357Z",
              "duration": 24,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.364Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.368Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.372Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.380Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.385Z",
              "duration": 0,
              "snippet": "  287 |         const response = await request.get(`${baseURL}${cartPath}/${carrinho._id}`)\n  288 |         expect(response.status()).toBe(200)\n      |                                   ^\n  289 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 288,
                "column": 35
              }
            },
            {
              "title": "expect.toEqual",
              "startTime": "2021-11-03T02:03:02.386Z",
              "duration": 0,
              "snippet": "  290 |         const responseData = await response.json()\n  291 |         expect(responseData).toEqual(carrinho)\n      |                              ^\n  292 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 291,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.386Z",
              "duration": 3,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-1b0eed2a2ee6c31cd2a3bfbf9983a50ef1de2d46",
      "title": "Buscar produto por ID não existente",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 294,
        "column": 5
      },
      "duration": 30,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:294",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 30,
          "startTime": "2021-11-03T02:03:02.366Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.366Z",
              "duration": 21,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.370Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.376Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.381Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.386Z",
                  "duration": 1,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.395Z",
              "duration": 0,
              "snippet": "  295 |         const response = await request.get(`${baseURL}${cartPath}/1`)\n  296 |         expect(response.status()).toBe(400)\n      |                                   ^\n  297 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 296,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.396Z",
              "duration": 0,
              "snippet": "  298 |         const responseData = await response.json()\n  299 |         expect(responseData).toHaveProperty(\"message\", \"Carrinho não encontrado\")\n      |                              ^\n  300 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 299,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.396Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-21c3dd6b3dc7d961692478fe7453d24a35369cb1",
      "title": "Excluir carrinho (concluir compra)",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 302,
        "column": 5
      },
      "duration": 41,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:302",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 41,
          "startTime": "2021-11-03T02:03:02.390Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.390Z",
              "duration": 29,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.397Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.402Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.411Z",
                  "duration": 2,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.418Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.428Z",
              "duration": 0,
              "snippet": "  305 |         })\n  306 |         expect(response.status()).toBe(200)\n      |                                   ^\n  307 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 306,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.429Z",
              "duration": 0,
              "snippet": "  308 |         const responseData = await response.json()\n  309 |         expect(responseData).toHaveProperty(\"message\", \"Registro excluído com sucesso\")\n      |                              ^\n  310 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 309,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.429Z",
              "duration": 2,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-36eadefcbfde7d875d95e37ba4885aa1e81797d3",
      "title": "Excluir carrinho (concluir compra) com usuário sem carrinho",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 312,
        "column": 5
      },
      "duration": 61,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:312",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 61,
          "startTime": "2021-11-03T02:03:02.398Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.398Z",
              "duration": 38,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.403Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.409Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.416Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.436Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.446Z",
              "duration": 0,
              "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 53,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.449Z",
              "duration": 1,
              "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 31,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.455Z",
              "duration": 0,
              "snippet": "  323 |         })\n  324 |         expect(response.status()).toBe(200)\n      |                                   ^\n  325 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 324,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.456Z",
              "duration": 1,
              "snippet": "  326 |         const responseData = await response.json()\n  327 |         expect(responseData).toHaveProperty(\"message\", \"Não foi encontrado carrinho para esse usuário\")\n      |                              ^\n  328 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 327,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.457Z",
              "duration": 2,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-8f2849839cbedf4e41f6678d424dde57d98d0991",
      "title": "Excluir carrinho (concluir compra) com Token inválido",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 330,
        "column": 5
      },
      "duration": 30,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:330",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 30,
          "startTime": "2021-11-03T02:03:02.432Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.432Z",
              "duration": 26,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.439Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.442Z",
                  "duration": 1,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.453Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.457Z",
                  "duration": 1,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.461Z",
              "duration": 0,
              "snippet": "  333 |         })\n  334 |         expect(response.status()).toBe(401)\n      |                                   ^\n  335 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 334,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.462Z",
              "duration": 0,
              "snippet": "  336 |         const responseData = await response.json()\n  337 |         expect(responseData).toHaveProperty(\n      |                              ^\n  338 |             \"message\",",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 337,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.462Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-98252a9ce880d077648fbc903fbf2c9c495b6e95",
      "title": "Excluir carrinho (cancelar compra)",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 343,
        "column": 5
      },
      "duration": 28,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:343",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 28,
          "startTime": "2021-11-03T02:03:02.460Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.460Z",
              "duration": 21,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.465Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.468Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.475Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.481Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.486Z",
              "duration": 0,
              "snippet": "  346 |         })\n  347 |         expect(response.status()).toBe(200)\n      |                                   ^\n  348 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 347,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.487Z",
              "duration": 0,
              "snippet": "  349 |         const responseData = await response.json()\n  350 |         expect(responseData).toHaveProperty(\n      |                              ^\n  351 |             \"message\",",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 350,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.487Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-3fe3a416c4cc36076898b11bc314d3b4378c8e58",
      "title": "Excluir carrinho (cancelar compra) com usuário sem carrinho",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 356,
        "column": 5
      },
      "duration": 38,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:356",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 38,
          "startTime": "2021-11-03T02:03:02.463Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.463Z",
              "duration": 25,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.470Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.473Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.479Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.487Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.491Z",
              "duration": 0,
              "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 53,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.494Z",
              "duration": 0,
              "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 31,
                "column": 39
              }
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.498Z",
              "duration": 1,
              "snippet": "  367 |         })\n  368 |         expect(response.status()).toBe(200)\n      |                                   ^\n  369 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 368,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.499Z",
              "duration": 0,
              "snippet": "  370 |         const responseData = await response.json()\n  371 |         expect(responseData).toHaveProperty(\"message\", \"Não foi encontrado carrinho para esse usuário\")\n      |                              ^\n  372 |     })",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 371,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.499Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "a4f306a4c494dd748f9f69f67282751dd629d012-e0af0190125b2182793cb7862b7494a3704d1a94",
      "title": "Excluir carrinho (cancelar compra) com Token inválido",
      "projectName": "",
      "location": {
        "file": "carrinhos.spec.js",
        "line": 374,
        "column": 5
      },
      "duration": 48,
      "outcome": "expected",
      "path": [
        "carrinhos.spec.js:374",
        "Carrinhos endpoint @carrinhos"
      ],
      "results": [
        {
          "duration": 48,
          "startTime": "2021-11-03T02:03:02.489Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:03:02.489Z",
              "duration": 43,
              "steps": [
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.496Z",
                  "duration": 0,
                  "snippet": "   52 |             })\n   53 |             expect(response.status()).toBe(201)\n      |                                       ^\n   54 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 53,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.501Z",
                  "duration": 0,
                  "snippet": "   30 |             })\n   31 |             expect(response.status()).toBe(200)\n      |                                       ^\n   32 |             return await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 31,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.506Z",
                  "duration": 0,
                  "snippet": "   77 |             })\n   78 |             expect(response.status()).toBe(201)\n      |                                       ^\n   79 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 78,
                    "column": 39
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:03:02.531Z",
                  "duration": 0,
                  "snippet": "  106 |             })\n  107 |             expect(response.status()).toBe(201)\n      |                                       ^\n  108 |             responseData = await response.json()",
                  "steps": [],
                  "location": {
                    "file": "../../api/fixtures.js",
                    "line": 107,
                    "column": 39
                  }
                }
              ]
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-11-03T02:03:02.536Z",
              "duration": 0,
              "snippet": "  377 |         })\n  378 |         expect(response.status()).toBe(401)\n      |                                   ^\n  379 |",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 378,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveProperty",
              "startTime": "2021-11-03T02:03:02.536Z",
              "duration": 0,
              "snippet": "  380 |         const responseData = await response.json()\n  381 |         expect(responseData).toHaveProperty(\n      |                              ^\n  382 |             \"message\",",
              "steps": [],
              "location": {
                "file": "carrinhos.spec.js",
                "line": 381,
                "column": 30
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:03:02.536Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}