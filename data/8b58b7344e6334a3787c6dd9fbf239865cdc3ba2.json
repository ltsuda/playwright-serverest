{
  "fileId": "8b58b7344e6334a3787c6dd9fbf239865cdc3ba2",
  "fileName": "schemas/produtos.spec.js",
  "tests": [
    {
      "testId": "8b58b7344e6334a3787c6dd9fbf239865cdc3ba2-3b2ead4fcd16ef0c556aadef797df56debec367f",
      "title": "Listar produtos cadastrados",
      "projectName": "",
      "location": {
        "file": "schemas/produtos.spec.js",
        "line": 15,
        "column": 5
      },
      "duration": 22,
      "outcome": "expected",
      "path": [
        "schemas/produtos.spec.js:15",
        "@schema-produtos"
      ],
      "results": [
        {
          "duration": 22,
          "startTime": "2021-10-31T01:18:18.504Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:18:18.504Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:18:18.512Z",
              "duration": 0,
              "snippet": "  52 |             })\n  53 |             expect(response.status()).toBe(201)\n     |                                       ^\n  54 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 53,
                "column": 39
              }
            },
            {
              "title": "expect.toBeTruthy",
              "startTime": "2021-10-31T01:18:18.519Z",
              "duration": 0,
              "snippet": "  18 |\n  19 |         expect(response.ok()).toBeTruthy()\n     |                               ^\n  20 |         Joi.assert(await response.json(), produtos.get)",
              "steps": [],
              "location": {
                "file": "schemas/produtos.spec.js",
                "line": 19,
                "column": 31
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:18:18.525Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "8b58b7344e6334a3787c6dd9fbf239865cdc3ba2-c8a52b459da468834c9416841206560a47e89273",
      "title": "Cadastrar produto com body vazio",
      "projectName": "",
      "location": {
        "file": "schemas/produtos.spec.js",
        "line": 23,
        "column": 5
      },
      "duration": 8,
      "outcome": "expected",
      "path": [
        "schemas/produtos.spec.js:23",
        "@schema-produtos"
      ],
      "results": [
        {
          "duration": 8,
          "startTime": "2021-10-31T01:18:18.507Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:18:18.507Z",
              "duration": 1,
              "steps": []
            },
            {
              "title": "expect.toBeFalsy",
              "startTime": "2021-10-31T01:18:18.512Z",
              "duration": 1,
              "snippet": "  25 |\n  26 |         expect(response.ok()).toBeFalsy()\n     |                               ^\n  27 |         Joi.assert(await response.json(), produtos.post)",
              "steps": [],
              "location": {
                "file": "schemas/produtos.spec.js",
                "line": 26,
                "column": 31
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:18:18.514Z",
              "duration": 0,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "8b58b7344e6334a3787c6dd9fbf239865cdc3ba2-4b66ac4676a7cfe5d3aa1ea0e5f55798d2b09cb0",
      "title": "Editar usu√°rio produto com vazio",
      "projectName": "",
      "location": {
        "file": "schemas/produtos.spec.js",
        "line": 30,
        "column": 5
      },
      "duration": 13,
      "outcome": "expected",
      "path": [
        "schemas/produtos.spec.js:30",
        "@schema-produtos"
      ],
      "results": [
        {
          "duration": 13,
          "startTime": "2021-10-31T01:18:18.537Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-31T01:18:18.537Z",
              "duration": 2,
              "steps": []
            },
            {
              "title": "expect.toBe",
              "startTime": "2021-10-31T01:18:18.543Z",
              "duration": 0,
              "snippet": "  33 |             })\n  34 |             expect(response.status()).toBe(201)\n     |                                       ^\n  35 |             responseData = await response.json()",
              "steps": [],
              "location": {
                "file": "../../api/fixtures.js",
                "line": 34,
                "column": 39
              }
            },
            {
              "title": "expect.toBeFalsy",
              "startTime": "2021-10-31T01:18:18.548Z",
              "duration": 0,
              "snippet": "  35 |\n  36 |         expect(response.ok()).toBeFalsy()\n     |                               ^\n  37 |         Joi.assert(await response.json(), produtos.put)",
              "steps": [],
              "location": {
                "file": "schemas/produtos.spec.js",
                "line": 36,
                "column": 31
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-31T01:18:18.549Z",
              "duration": 1,
              "steps": []
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}